<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes">
    
    <!--ChooseAuth buttons-->
    <Style x:Key="authButton" TargetType="RadioButton">
        <!--Normal style-->
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="30,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="DarkGray"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0,1">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--button hover style-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="30,0,0,5"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush"
                        Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--activated button-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="30,0,0,5"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" 
                        Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal style-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5,40,0,5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource textColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="4,0,0,0">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--button hover style-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,40,0,5"/>
                <Setter Property="Background" Value="{StaticResource overPanelColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" 
                        Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
            <!--activated button-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0,40,0,5"/>
                <Setter Property="Background" Value="{StaticResource activePanelColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" 
                        Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Menu button icon-->
    <Style x:Key="menuButtonIcon" TargetType="material:PackIcon">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="45,0,20,0"/>
    </Style>
    <!--Menu button text-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource Montserrat}"/>
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
    </Style>

    
    <!--Control button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal style-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource textColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--button hover style-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource activePanelColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Mode=Self}}"/>
              
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--Control button icon-->
    <Style x:Key="controlButtonIcon" TargetType="material:PackIcon">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="1"/>
        <Setter Property="Height" Value="15"/>
    </Style>
</ResourceDictionary>